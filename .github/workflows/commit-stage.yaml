name: Commit stage

on:
  push:

env:
  PHP_EXTENSIONS: ctype, iconv, json, curl, gd, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1
  COVERAGE_ARTIFATC_NAME: 'coverage-reports-on-SHA'
  COVERAGE_CLOVER_UNIT_FILENAME: 'coverage-unit-test-clover.xml'


jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: pcov

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi

      - name: Run unit tests
        run: |
          vendor/bin/phpunit --testsuite=unit --testdox --no-interaction --colors=always \
          --coverage-clover $COVERAGE_CLOVER_UNIT_FILENAME

      - name: Get Artifact name
        id: artifact-name
        run: echo "::set-output name=name::$COVERAGE_ARTIFATC_NAME-$GITHUB_SHA"

      - name: Save coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.artifact-name.outputs.name }}
          path: ${{ env.COVERAGE_CLOVER_UNIT_FILENAME }}


  lint-composer:
    name: Validate Composer
    runs-on: ubuntu-18.04
    timeout-minutes: 2
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi 

      - name: Run composer validate
        run: |
          composer validate --strict --ansi
        continue-on-error: true

      - name: Run composer normalize
        run: |
          composer-normalize --dry-run --ansi


  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Install easy-coding-standard
        run: |
          composer bin ecs install  --no-progress --ansi

      - name: Run easy-coding-standard
        run: |
          ./vendor/bin/ecs


  phpstan:
    name: Static Analysis
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin phpstan install --prefer-dist --no-progress --ansi

      - name: Run phpstan
        run: vendor/bin/phpstan --configuration=phpstan.neon --ansi


  rector:
    name: Rector (maintenance)
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup php extension cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache PHP extensions
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-
        continue-on-error: true

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Install rector
        run: composer bin rector install --no-progress --ansi

      - name: Run rector
        run: ./vendor/bin/rector process --dry-run --ansi
        continue-on-error: true
